{"ast":null,"code":"var _jsxFileName = \"/Users/bryansanchezandrade/Documents/box/client/src/pages/Conversation.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport AppBar from \"../components/AppBar\";\nimport App from \"../App\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Conversation() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const user_id = queryParams.get(\"user_id\");\n  const conversation_id = queryParams.get(\"conversation_id\");\n  const [messages, setMessages] = useState([]);\n  const getConversation = async () => {\n    axios.get(`${backendUrl}api/getConversation`, {\n      params: {\n        user_id: user_id,\n        conversation_id: conversation_id\n      }\n    }).then(response => {\n      const message = response.data.rows;\n      console.log(\"Response from server:\", message);\n      setMessages(message);\n    }).catch(error => {\n      console.error(\"Error getting data: \", error);\n    });\n  };\n  useEffect(() => {\n    getConversation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), messages.length ? messages.map(message => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        margin: \"1vw\",\n        backgroundColor: message.sender_id == user_id ? \"rgba(24,118,210,0.25)\" : \"white\"\n      },\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            textAlign: message.sender_id == user_id ? \"right\" : \"left\"\n          },\n          children: [message.sender_id != user_id ? message.first_name : null, message.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, message.message_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"You have no messages to view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Conversation, \"ibne9NBQAwrSrJBrpe1PDUVlRoM=\", false, function () {\n  return [useLocation];\n});\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["useLocation","AppBar","App","axios","backendUrl","useEffect","useState","Typography","Card","CardContent","jsxDEV","_jsxDEV","Fragment","_Fragment","Conversation","_s","search","queryParams","URLSearchParams","user_id","get","conversation_id","messages","setMessages","getConversation","params","then","response","message","data","rows","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","sx","margin","backgroundColor","sender_id","variant","textAlign","first_name","content","message_id","_c","$RefreshReg$"],"sources":["/Users/bryansanchezandrade/Documents/box/client/src/pages/Conversation.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\nimport AppBar from \"../components/AppBar\";\nimport App from \"../App\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\n\nfunction Conversation() {\n  const { search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const user_id = queryParams.get(\"user_id\");\n  const conversation_id = queryParams.get(\"conversation_id\");\n  const [messages, setMessages] = useState([]);\n\n  const getConversation = async () => {\n    axios\n      .get(`${backendUrl}api/getConversation`, {\n        params: { user_id: user_id, conversation_id: conversation_id },\n      })\n      .then((response) => {\n        const message = response.data.rows;\n        console.log(\"Response from server:\", message);\n        setMessages(message);\n      })\n      .catch((error) => {\n        console.error(\"Error getting data: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getConversation();\n  }, []);\n  return (\n    <>\n      <AppBar />\n      {messages.length ? (\n        messages.map((message) => (\n          <Card\n            sx={{\n              margin: \"1vw\",\n              backgroundColor:\n                message.sender_id == user_id\n                  ? \"rgba(24,118,210,0.25)\"\n                  : \"white\",\n            }}\n            variant=\"outlined\"\n            key={message.message_id}\n          >\n            <CardContent>\n              <Typography\n                variant=\"h5\"\n                sx={{\n                  textAlign: message.sender_id == user_id ? \"right\" : \"left\",\n                }}\n              >\n                {message.sender_id != user_id ? message.first_name : null}\n                {message.content}\n              </Typography>\n            </CardContent>\n          </Card>\n        ))\n      ) : (\n        <Typography>You have no messages to view</Typography>\n      )}\n    </>\n  );\n}\nexport default Conversation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}