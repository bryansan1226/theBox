{"ast":null,"code":"var _jsxFileName = \"/Users/bryansanchezandrade/Documents/box/client/src/components/Notifications.js\",\n  _s = $RefreshSig$();\nimport { Card, CardContent, Typography, CardActions, Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Notifications(props) {\n  _s();\n  const setNotificationsAsRead = async () => {\n    const anyUnread = await checkIfUnread(props.content);\n    if (anyUnread) {\n      await axios.put(`${backendUrl}api/setNotificationsAsRead`, {\n        user_id: props.content[0].user_id\n      }).then(response => {\n        const {\n          message\n        } = response.data;\n        console.log(\"Response from server:\", message);\n      }).catch(error => {\n        console.error(\"Error posting data: \", error);\n      });\n    }\n  };\n  const checkIfUnread = arr => {\n    let result = false;\n    for (let i of arr) {\n      if (!i.is_read) {\n        result = true;\n        break;\n      }\n    }\n    console.log(result);\n    return result;\n  };\n  useEffect(() => {\n    setNotificationsAsRead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.content.map((notification, index) => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: notification.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Notifications, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["Card","CardContent","Typography","CardActions","Button","axios","backendUrl","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","props","_s","setNotificationsAsRead","anyUnread","checkIfUnread","content","put","user_id","then","response","message","data","console","log","catch","error","arr","result","i","is_read","children","map","notification","index","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bryansanchezandrade/Documents/box/client/src/components/Notifications.js"],"sourcesContent":["import {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\n\nfunction Notifications(props) {\n  const setNotificationsAsRead = async () => {\n    const anyUnread = await checkIfUnread(props.content);\n\n    if (anyUnread) {\n      await axios\n        .put(`${backendUrl}api/setNotificationsAsRead`, {\n          user_id: props.content[0].user_id,\n        })\n        .then((response) => {\n          const { message } = response.data;\n          console.log(\"Response from server:\", message);\n        })\n        .catch((error) => {\n          console.error(\"Error posting data: \", error);\n        });\n    }\n  };\n  const checkIfUnread = (arr) => {\n    let result = false;\n    for (let i of arr) {\n      if (!i.is_read) {\n        result = true;\n        break;\n      }\n    }\n    console.log(result);\n    return result;\n  };\n  useEffect(() => {\n    setNotificationsAsRead();\n  }, []);\n  return (\n    <>\n      {props.content.map((notification, index) => (\n        <Card key={index}>\n          <CardContent>\n            <Typography variant=\"body2\">{notification.content}</Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </>\n  );\n}\nexport default Notifications;\n"],"mappings":";;AAAA,SACEA,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,MAAM,QACD,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,WAAW;AAClC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,MAAMC,SAAS,GAAG,MAAMC,aAAa,CAACJ,KAAK,CAACK,OAAO,CAAC;IAEpD,IAAIF,SAAS,EAAE;MACb,MAAMX,KAAK,CACRc,GAAG,CAAE,GAAEb,UAAW,4BAA2B,EAAE;QAC9Cc,OAAO,EAAEP,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAACE;MAC5B,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;QAClB,MAAM;UAAEC;QAAQ,CAAC,GAAGD,QAAQ,CAACE,IAAI;QACjCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,OAAO,CAAC;MAC/C,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN;EACF,CAAC;EACD,MAAMX,aAAa,GAAIY,GAAG,IAAK;IAC7B,IAAIC,MAAM,GAAG,KAAK;IAClB,KAAK,IAAIC,CAAC,IAAIF,GAAG,EAAE;MACjB,IAAI,CAACE,CAAC,CAACC,OAAO,EAAE;QACdF,MAAM,GAAG,IAAI;QACb;MACF;IACF;IACAL,OAAO,CAACC,GAAG,CAACI,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf,CAAC;EACDvB,SAAS,CAAC,MAAM;IACdQ,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EACN,oBACEN,OAAA,CAAAE,SAAA;IAAAsB,QAAA,EACGpB,KAAK,CAACK,OAAO,CAACgB,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBACrC3B,OAAA,CAACT,IAAI;MAAAiC,QAAA,eACHxB,OAAA,CAACR,WAAW;QAAAgC,QAAA,eACVxB,OAAA,CAACP,UAAU;UAACmC,OAAO,EAAC,OAAO;UAAAJ,QAAA,EAAEE,YAAY,CAACjB;QAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC,GAHLL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIV,CACP;EAAC,gBACF,CAAC;AAEP;AAAC3B,EAAA,CA3CQF,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA4CtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}