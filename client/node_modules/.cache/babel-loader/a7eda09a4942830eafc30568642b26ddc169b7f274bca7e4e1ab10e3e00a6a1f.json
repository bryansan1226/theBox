{"ast":null,"code":"var _jsxFileName = \"/Users/bryansanchezandrade/Documents/box/client/src/pages/Conversation.js\",\n  _s = $RefreshSig$();\nimport { useLocation } from \"react-router-dom\";\nimport AppBar from \"../components/AppBar\";\nimport App from \"../App\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Container } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Conversation() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const user_id = queryParams.get(\"user_id\");\n  const conversation_id = queryParams.get(\"conversation_id\");\n  const [messages, setMessages] = useState([]);\n  const [newMessageValue, setNewMessageValue] = useState(\"\");\n  const getConversation = async () => {\n    axios.get(`${backendUrl}api/getConversation`, {\n      params: {\n        user_id: user_id,\n        conversation_id: conversation_id\n      }\n    }).then(response => {\n      const message = response.data.rows;\n      console.log(\"Response from server:\", message);\n      setMessages(message);\n    }).catch(error => {\n      console.error(\"Error getting data: \", error);\n    });\n  };\n  useEffect(() => {\n    getConversation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-end\",\n        minHeight: \"75vh\",\n        overflow: \"auto\",\n        backgroundColor: \"rgba(239, 239, 240)\",\n        marginBottom: \"10px\"\n      },\n      children: messages.length ? messages.map(message => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          margin: \"1vw\",\n          backgroundColor: message.sender_id == user_id ? \"rgba(24,118,210,0.25)\" : \"white\"\n        },\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              textAlign: message.sender_id == user_id ? \"right\" : \"left\"\n            },\n            children: [message.sender_id != user_id ? message.first_name + \": \" : null, message.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, message.message_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"You have no messages to view\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      sx: {\n        backgroundColor: \"white\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-multiline-static\",\n        label: \"Message\",\n        multiline: true,\n        rows: 4,\n        defaultValue: \"\",\n        fullWidth: true,\n        style: {\n          minHeight: \"35%\",\n          marginTop: \"10px\",\n          overflow: \"auto\"\n        },\n        onChange: e => {\n          setNewMessageValue(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Conversation, \"62XPn+QDvRiZFTAoSHzV6UTXBKI=\", false, function () {\n  return [useLocation];\n});\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["useLocation","AppBar","App","axios","backendUrl","useEffect","useState","Typography","Card","CardContent","Container","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","Conversation","_s","search","queryParams","URLSearchParams","user_id","get","conversation_id","messages","setMessages","newMessageValue","setNewMessageValue","getConversation","params","then","response","message","data","rows","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","fixed","sx","display","flexDirection","justifyContent","minHeight","overflow","backgroundColor","marginBottom","length","map","margin","sender_id","variant","textAlign","first_name","content","message_id","marginTop","id","label","multiline","defaultValue","fullWidth","style","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/bryansanchezandrade/Documents/box/client/src/pages/Conversation.js"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\nimport AppBar from \"../components/AppBar\";\nimport App from \"../App\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Container } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction Conversation() {\n  const { search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const user_id = queryParams.get(\"user_id\");\n  const conversation_id = queryParams.get(\"conversation_id\");\n  const [messages, setMessages] = useState([]);\n  const [newMessageValue, setNewMessageValue] = useState(\"\");\n  const getConversation = async () => {\n    axios\n      .get(`${backendUrl}api/getConversation`, {\n        params: { user_id: user_id, conversation_id: conversation_id },\n      })\n      .then((response) => {\n        const message = response.data.rows;\n        console.log(\"Response from server:\", message);\n        setMessages(message);\n      })\n      .catch((error) => {\n        console.error(\"Error getting data: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getConversation();\n  }, []);\n  return (\n    <>\n      <AppBar />\n      <Container\n        fixed\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end\",\n          minHeight: \"75vh\",\n          overflow: \"auto\",\n          backgroundColor: \"rgba(239, 239, 240)\",\n          marginBottom: \"10px\",\n        }}\n      >\n        {messages.length ? (\n          messages.map((message) => (\n            <Card\n              sx={{\n                margin: \"1vw\",\n                backgroundColor:\n                  message.sender_id == user_id\n                    ? \"rgba(24,118,210,0.25)\"\n                    : \"white\",\n              }}\n              variant=\"outlined\"\n              key={message.message_id}\n            >\n              <CardContent>\n                <Typography\n                  variant=\"h5\"\n                  sx={{\n                    textAlign: message.sender_id == user_id ? \"right\" : \"left\",\n                  }}\n                >\n                  {message.sender_id != user_id\n                    ? message.first_name + \": \"\n                    : null}\n                  {message.content}\n                </Typography>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Typography>You have no messages to view</Typography>\n        )}\n      </Container>\n      <Container fixed sx={{ backgroundColor: \"white\", marginTop: \"20px\" }}>\n        <TextField\n          id=\"standard-multiline-static\"\n          label=\"Message\"\n          multiline\n          rows={4}\n          defaultValue=\"\"\n          fullWidth\n          style={{\n            minHeight: \"35%\",\n            marginTop: \"10px\",\n            overflow: \"auto\",\n          }}\n          onChange={(e) => {\n            setNewMessageValue(e.target.value);\n          }}\n        />\n      </Container>\n    </>\n  );\n}\nexport default Conversation;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,WAAW;AAClC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAO,CAAC,GAAGlB,WAAW,CAAC,CAAC;EAChC,MAAMmB,WAAW,GAAG,IAAIC,eAAe,CAACF,MAAM,CAAC;EAC/C,MAAMG,OAAO,GAAGF,WAAW,CAACG,GAAG,CAAC,SAAS,CAAC;EAC1C,MAAMC,eAAe,GAAGJ,WAAW,CAACG,GAAG,CAAC,iBAAiB,CAAC;EAC1D,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMsB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCzB,KAAK,CACFmB,GAAG,CAAE,GAAElB,UAAW,qBAAoB,EAAE;MACvCyB,MAAM,EAAE;QAAER,OAAO,EAAEA,OAAO;QAAEE,eAAe,EAAEA;MAAgB;IAC/D,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI;MAClCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,OAAO,CAAC;MAC7CP,WAAW,CAACO,OAAO,CAAC;IACtB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACduB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,oBACEf,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA,CAACZ,MAAM;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV9B,OAAA,CAACH,SAAS;MACRkC,KAAK;MACLC,EAAE,EAAE;QACFC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,cAAc,EAAE,UAAU;QAC1BC,SAAS,EAAE,MAAM;QACjBC,QAAQ,EAAE,MAAM;QAChBC,eAAe,EAAE,qBAAqB;QACtCC,YAAY,EAAE;MAChB,CAAE;MAAAb,QAAA,EAEDf,QAAQ,CAAC6B,MAAM,GACd7B,QAAQ,CAAC8B,GAAG,CAAEtB,OAAO,iBACnBnB,OAAA,CAACL,IAAI;QACHqC,EAAE,EAAE;UACFU,MAAM,EAAE,KAAK;UACbJ,eAAe,EACbnB,OAAO,CAACwB,SAAS,IAAInC,OAAO,GACxB,uBAAuB,GACvB;QACR,CAAE;QACFoC,OAAO,EAAC,UAAU;QAAAlB,QAAA,eAGlB1B,OAAA,CAACJ,WAAW;UAAA8B,QAAA,eACV1B,OAAA,CAACN,UAAU;YACTkD,OAAO,EAAC,IAAI;YACZZ,EAAE,EAAE;cACFa,SAAS,EAAE1B,OAAO,CAACwB,SAAS,IAAInC,OAAO,GAAG,OAAO,GAAG;YACtD,CAAE;YAAAkB,QAAA,GAEDP,OAAO,CAACwB,SAAS,IAAInC,OAAO,GACzBW,OAAO,CAAC2B,UAAU,GAAG,IAAI,GACzB,IAAI,EACP3B,OAAO,CAAC4B,OAAO;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC,GAdTX,OAAO,CAAC6B,UAAU;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAenB,CACP,CAAC,gBAEF9B,OAAA,CAACN,UAAU;QAAAgC,QAAA,EAAC;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IACrD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACZ9B,OAAA,CAACH,SAAS;MAACkC,KAAK;MAACC,EAAE,EAAE;QAAEM,eAAe,EAAE,OAAO;QAAEW,SAAS,EAAE;MAAO,CAAE;MAAAvB,QAAA,eACnE1B,OAAA,CAACF,SAAS;QACRoD,EAAE,EAAC,2BAA2B;QAC9BC,KAAK,EAAC,SAAS;QACfC,SAAS;QACT/B,IAAI,EAAE,CAAE;QACRgC,YAAY,EAAC,EAAE;QACfC,SAAS;QACTC,KAAK,EAAE;UACLnB,SAAS,EAAE,KAAK;UAChBa,SAAS,EAAE,MAAM;UACjBZ,QAAQ,EAAE;QACZ,CAAE;QACFmB,QAAQ,EAAGC,CAAC,IAAK;UACf3C,kBAAkB,CAAC2C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QACpC;MAAE;QAAAhC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA,eACZ,CAAC;AAEP;AAAC1B,EAAA,CA5FQD,YAAY;EAAA,QACAhB,WAAW;AAAA;AAAAyE,EAAA,GADvBzD,YAAY;AA6FrB,eAAeA,YAAY;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}