[{"/Users/bryansanchezandrade/Documents/box/client/src/index.js":"1","/Users/bryansanchezandrade/Documents/box/client/src/reportWebVitals.js":"2","/Users/bryansanchezandrade/Documents/box/client/src/App.js":"3","/Users/bryansanchezandrade/Documents/box/client/src/pages/Homepage.js":"4","/Users/bryansanchezandrade/Documents/box/client/src/pages/Login.js":"5","/Users/bryansanchezandrade/Documents/box/client/src/config.js":"6","/Users/bryansanchezandrade/Documents/box/client/src/components/NewPostForm.js":"7","/Users/bryansanchezandrade/Documents/box/client/src/components/NewAccountForm.js":"8","/Users/bryansanchezandrade/Documents/box/client/src/components/LoginForm.js":"9","/Users/bryansanchezandrade/Documents/box/client/src/components/PostFeed.js":"10","/Users/bryansanchezandrade/Documents/box/client/src/components/Post.js":"11","/Users/bryansanchezandrade/Documents/box/client/src/pages/SearchResults.js":"12","/Users/bryansanchezandrade/Documents/box/client/src/components/UserCard.js":"13","/Users/bryansanchezandrade/Documents/box/client/src/components/AppBar.js":"14","/Users/bryansanchezandrade/Documents/box/client/src/components/Comment.js":"15","/Users/bryansanchezandrade/Documents/box/client/src/pages/Messages.js":"16","/Users/bryansanchezandrade/Documents/box/client/src/components/ConversationCard.js":"17","/Users/bryansanchezandrade/Documents/box/client/src/pages/Conversation.js":"18","/Users/bryansanchezandrade/Documents/box/client/src/components/Notifications.js":"19","/Users/bryansanchezandrade/Documents/box/client/src/pages/NotificationsPage.js":"20","/Users/bryansanchezandrade/Documents/theBox/client/src/index.js":"21","/Users/bryansanchezandrade/Documents/theBox/client/src/reportWebVitals.js":"22","/Users/bryansanchezandrade/Documents/theBox/client/src/App.js":"23","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/NotificationsPage.js":"24","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Login.js":"25","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Conversation.js":"26","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/SearchResults.js":"27","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Messages.js":"28","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Homepage.js":"29","/Users/bryansanchezandrade/Documents/theBox/client/src/config.js":"30","/Users/bryansanchezandrade/Documents/theBox/client/src/components/AppBar.js":"31","/Users/bryansanchezandrade/Documents/theBox/client/src/components/Notifications.js":"32","/Users/bryansanchezandrade/Documents/theBox/client/src/components/LoginForm.js":"33","/Users/bryansanchezandrade/Documents/theBox/client/src/components/NewPostForm.js":"34","/Users/bryansanchezandrade/Documents/theBox/client/src/components/ConversationCard.js":"35","/Users/bryansanchezandrade/Documents/theBox/client/src/components/PostFeed.js":"36","/Users/bryansanchezandrade/Documents/theBox/client/src/components/NewAccountForm.js":"37","/Users/bryansanchezandrade/Documents/theBox/client/src/components/UserCard.js":"38","/Users/bryansanchezandrade/Documents/theBox/client/src/components/Post.js":"39","/Users/bryansanchezandrade/Documents/theBox/client/src/components/Comment.js":"40"},{"size":514,"mtime":1690404370111,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1690397929494,"results":"43","hashOfConfig":"42"},{"size":832,"mtime":1698958083828,"results":"44","hashOfConfig":"42"},{"size":2255,"mtime":1698945407178,"results":"45","hashOfConfig":"42"},{"size":867,"mtime":1698934304876,"results":"46","hashOfConfig":"42"},{"size":108,"mtime":1690488287256,"results":"47","hashOfConfig":"42"},{"size":1699,"mtime":1697131761044,"results":"48","hashOfConfig":"42"},{"size":4242,"mtime":1698878426446,"results":"49","hashOfConfig":"42"},{"size":3527,"mtime":1698877373782,"results":"50","hashOfConfig":"42"},{"size":1836,"mtime":1698946915515,"results":"51","hashOfConfig":"42"},{"size":7380,"mtime":1698947851279,"results":"52","hashOfConfig":"42"},{"size":2633,"mtime":1698949364755,"results":"53","hashOfConfig":"42"},{"size":3456,"mtime":1698949495313,"results":"54","hashOfConfig":"42"},{"size":12439,"mtime":1698957901239,"results":"55","hashOfConfig":"42"},{"size":1008,"mtime":1697220264274,"results":"56","hashOfConfig":"42"},{"size":7551,"mtime":1698939349962,"results":"57","hashOfConfig":"42"},{"size":1810,"mtime":1698936547496,"results":"58","hashOfConfig":"42"},{"size":5699,"mtime":1698937808304,"results":"59","hashOfConfig":"42"},{"size":1514,"mtime":1698959127032,"results":"60","hashOfConfig":"42"},{"size":1622,"mtime":1698958937068,"results":"61","hashOfConfig":"42"},{"size":514,"mtime":1690404370111,"results":"62","hashOfConfig":"63"},{"size":362,"mtime":1690397929494,"results":"64","hashOfConfig":"63"},{"size":832,"mtime":1698958083828,"results":"65","hashOfConfig":"63"},{"size":1622,"mtime":1698958937068,"results":"66","hashOfConfig":"63"},{"size":867,"mtime":1698934304876,"results":"67","hashOfConfig":"63"},{"size":5699,"mtime":1698937808304,"results":"68","hashOfConfig":"63"},{"size":2633,"mtime":1698949364755,"results":"69","hashOfConfig":"63"},{"size":7551,"mtime":1698939349962,"results":"70","hashOfConfig":"63"},{"size":2255,"mtime":1698945407178,"results":"71","hashOfConfig":"63"},{"size":180,"mtime":1699027384502,"results":"72","hashOfConfig":"63"},{"size":12439,"mtime":1698957901239,"results":"73","hashOfConfig":"63"},{"size":1514,"mtime":1698959127032,"results":"74","hashOfConfig":"63"},{"size":3627,"mtime":1699024421324,"results":"75","hashOfConfig":"63"},{"size":1699,"mtime":1697131761044,"results":"76","hashOfConfig":"63"},{"size":1810,"mtime":1698936547496,"results":"77","hashOfConfig":"63"},{"size":1836,"mtime":1698946915515,"results":"78","hashOfConfig":"63"},{"size":4242,"mtime":1698878426446,"results":"79","hashOfConfig":"63"},{"size":3456,"mtime":1698949495313,"results":"80","hashOfConfig":"63"},{"size":7380,"mtime":1698947851279,"results":"81","hashOfConfig":"63"},{"size":1008,"mtime":1697220264274,"results":"82","hashOfConfig":"63"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"bd1q3k",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sqbf4w",{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},"/Users/bryansanchezandrade/Documents/box/client/src/index.js",[],[],[],"/Users/bryansanchezandrade/Documents/box/client/src/reportWebVitals.js",[],[],"/Users/bryansanchezandrade/Documents/box/client/src/App.js",[],[],"/Users/bryansanchezandrade/Documents/box/client/src/pages/Homepage.js",["218","219","220","221"],[],"/Users/bryansanchezandrade/Documents/box/client/src/pages/Login.js",["222","223","224","225","226","227"],[],"/Users/bryansanchezandrade/Documents/box/client/src/config.js",[],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/NewPostForm.js",[],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/NewAccountForm.js",[],[],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/LoginForm.js",[],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/PostFeed.js",["228","229"],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/Post.js",["230","231"],[],"/Users/bryansanchezandrade/Documents/box/client/src/pages/SearchResults.js",["232"],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/UserCard.js",["233"],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/AppBar.js",["234","235"],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/Comment.js",["236"],[],"import { useState } from \"react\";\nimport backendUrl from \"../config\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { Card, CardContent, Typography } from \"@mui/material\";\n\nfunction Comment(props) {\n  const [userInfo, setUserInfo] = useState([]);\n\n  const findByUserID = async () => {\n    axios\n      .get(`${backendUrl}api/findByUserID/${props.content.user_id}`)\n      .then((response) => {\n        const message = response.data;\n        setUserInfo(message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  useEffect(() => {\n    findByUserID();\n  }, []);\n  return (\n    <Card>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {userInfo.first_name} {userInfo.last_name}\n        </Typography>\n        <Typography variant=\"body2\" component=\"div\">\n          {props.content.content}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\nexport default Comment;\n","/Users/bryansanchezandrade/Documents/box/client/src/pages/Messages.js",["237","238","239","240"],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/ConversationCard.js",["241","242","243"],[],"/Users/bryansanchezandrade/Documents/box/client/src/pages/Conversation.js",["244","245","246","247","248"],[],"/Users/bryansanchezandrade/Documents/box/client/src/components/Notifications.js",["249","250","251"],[],"/Users/bryansanchezandrade/Documents/box/client/src/pages/NotificationsPage.js",["252","253"],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/index.js",[],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/reportWebVitals.js",[],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/App.js",[],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/pages/NotificationsPage.js",["254","255"],[],"import { Typography, Container } from \"@mui/material\";\nimport AppBar from \"../components/AppBar\";\nimport Notifications from \"../components/Notifications\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\n\nfunction NotificationsPage() {\n  const { search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const searchQuery = queryParams.get(\"searchQuery\");\n  const userInfo = queryParams.get(\"userInfo\");\n  const [notifications, setNotifications] = useState([]);\n  console.log(userInfo);\n  const getNotifications = async () => {\n    await axios\n      .get(`${backendUrl}api/getNotifications/${userInfo}`)\n      .then((response) => {\n        const message = response.data.rows;\n        setNotifications(\n          message.sort((a, b) => {\n            const timeStampA = new Date(a.created_at).getTime();\n            const timeStampB = new Date(b.created_at).getTime();\n            return timeStampB - timeStampA;\n          })\n        );\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  useEffect(() => {\n    getNotifications();\n  }, []);\n  return (\n    <>\n      <AppBar />\n      <Container\n        sx={{\n          minWidth: \"100vw\",\n          minHeight: \"90vh\",\n        }}\n      >\n        <Typography variant=\"h4\">Notifications</Typography>\n        <Notifications content={notifications} />\n      </Container>\n    </>\n  );\n}\nexport default NotificationsPage;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Login.js",["256","257","258","259","260","261"],[],"import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport NewAccountForm from \"../components/NewAccountForm\";\nimport LoginForm from \"../components/LoginForm\";\nimport Container from \"@mui/material/Container\";\n\n//The login function is used to open or close the NewAccountForm component\nfunction Login() {\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  return (\n    <>\n      <Container\n        sx={{\n          minWidth: \"100vw\",\n          minHeight: \"100vh\",\n          backgroundColor: \"rgb(24,118,210,0.25)\",\n        }}\n      >\n        {/*This component handles user credentials and is always displayed */}\n        <LoginForm />\n      </Container>\n    </>\n  );\n}\n\nexport default Login;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Conversation.js",["262","263","264","265","266"],[],"import { useLocation } from \"react-router-dom\";\nimport AppBar from \"../components/AppBar\";\nimport App from \"../App\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Button, Container } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\n\nfunction Conversation() {\n  const { search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const user_id = queryParams.get(\"user_id\");\n  const conversation_id = queryParams.get(\"conversation_id\");\n  const [messages, setMessages] = useState([]);\n  const [newMessageValue, setNewMessageValue] = useState(\"\");\n  const containerRef = useRef(null);\n  const getConversation = async () => {\n    axios\n      .get(`${backendUrl}api/getConversation`, {\n        params: { user_id: user_id, conversation_id: conversation_id },\n      })\n      .then((response) => {\n        const message = response.data.rows;\n        console.log(\"Response from server:\", message);\n        setMessages(\n          message.sort((a, b) => {\n            const timeStampA = new Date(a.created_at).getTime();\n            const timeStampB = new Date(b.created_at).getTime();\n            return timeStampA - timeStampB;\n          })\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error getting data: \", error);\n      });\n  };\n  const handleSendMessage = async () => {\n    const currentTimestamp = new Date().toISOString();\n    await axios\n      .post(`${backendUrl}api/newMessage`, {\n        sender_id: user_id,\n        receiver_id: conversation_id,\n        content: newMessageValue,\n        created_at: currentTimestamp,\n      })\n      .then((response) => {\n        const { message } = response.data;\n        console.log(\"Response from server:\", message);\n        setNewMessageValue(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error posting data: \", error);\n      });\n    setNewMessageValue(\"\");\n    getConversation();\n  };\n  const handleEnterKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSendMessage();\n    }\n  };\n  const setMessagesAsRead = async () => {\n    await axios\n      .put(`${backendUrl}api/setMessagesAsRead`, {\n        receiver_id: user_id,\n      })\n      .then((response) => {\n        const { message } = response.data;\n        console.log(\"Response from server:\", message);\n        setNewMessageValue(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error posting data: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getConversation();\n    setMessagesAsRead();\n  }, []);\n  useEffect(() => {\n    if (containerRef.current) {\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return (\n    <>\n      <AppBar />\n      <Container\n        fixed\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end\",\n          minHeight: \"75vh\",\n          maxHeight: \"75vh\",\n          backgroundColor: \"rgba(239, 239, 240)\",\n        }}\n      >\n        <Container\n          ref={containerRef}\n          sx={{\n            flex: 1,\n            overflow: \"auto\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          {messages.length ? (\n            messages.map((message) => (\n              <Container\n                sx={{\n                  display: \"flex\",\n                  justifyContent:\n                    message.sender_id == user_id ? \"flex-end\" : \"flex-start\",\n                  maxWidth: \"95%\",\n                  marginBottom: \"8px\",\n                }}\n                key={message.message_id}\n              >\n                <Card\n                  sx={{\n                    backgroundColor:\n                      message.sender_id == user_id\n                        ? \"rgba(24,118,210,0.25)\"\n                        : \"white\",\n                    maxWidth: \"90%\",\n                  }}\n                  variant=\"outlined\"\n                >\n                  <CardContent>\n                    <Typography variant=\"h5\" sx={{}}>\n                      {message.sender_id != user_id\n                        ? message.first_name + \": \"\n                        : null}\n                      {message.content}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Container>\n            ))\n          ) : (\n            <Typography>You have no messages to view</Typography>\n          )}\n        </Container>\n      </Container>\n      <Container\n        fixed\n        sx={{\n          backgroundColor: \"white\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <TextField\n          id=\"standard-multiline-static\"\n          label=\"Message\"\n          multiline\n          rows={4}\n          value={newMessageValue}\n          style={{\n            minHeight: \"35%\",\n            marginTop: \"10px\",\n            overflow: \"auto\",\n            minWidth: \"100%\",\n          }}\n          onChange={(e) => {\n            setNewMessageValue(e.target.value);\n          }}\n          onKeyDown={handleEnterKeyPress}\n        />\n        <Container sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          <Button\n            variant=\"contained\"\n            sx={{ maxWidth: \"10vw\" }}\n            onClick={handleSendMessage}\n          >\n            <Typography>Send</Typography>\n          </Button>\n        </Container>\n      </Container>\n    </>\n  );\n}\nexport default Conversation;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/SearchResults.js",["267"],[],"import { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport backendUrl from \"../config\";\nimport axios from \"axios\";\nimport UserCard from \"../components/UserCard\";\nimport AppBar from \"../components/AppBar\";\nimport { Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction SearchResults() {\n  const { search } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const searchQuery = queryParams.get(\"searchQuery\");\n  const userInfo = queryParams.get(\"userInfo\");\n  const [results, setResults] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const navigate = useNavigate();\n\n  const searchForUser = async () => {\n    axios\n      .get(`${backendUrl}api/search/users/${searchQuery}`)\n      .then((response) => {\n        const message = response.data.rows;\n        setResults(message);\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n\n  const fetchUserInfo = async () => {\n    //  console.log(\"got to fetch\");\n    try {\n      //Retrieves token from localstorage, if no token is present the user will be redirected to /login\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        //redirect\n        navigate(\"/\");\n        return null;\n      }\n      //Makes a GET request to fetch user data using token\n      const response = await axios.get(`${backendUrl}api/user`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      // Returns user data if successful\n      return response.data;\n      //console.log(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user information\", error);\n      return null;\n    }\n  };\n  //Function to get user info using fetchUserInfo and updates userInfo state.\n  const getUserInfo = async () => {\n    const info = await fetchUserInfo();\n    if (info) {\n      setUserName(info.first_name + \" \" + info.last_name);\n      // console.log(\"User info \", info);\n    } else {\n      console.log(\"User not authenticated or an error occured.\");\n    }\n  };\n  useEffect(() => {\n    searchForUser();\n    getUserInfo();\n  }, []);\n\n  return (\n    <>\n      <AppBar />\n      <div>\n        <Typography variant=\"h4\">Results:</Typography>\n      </div>\n      <div>\n        {results.map((result, index) => (\n          <UserCard\n            key={index}\n            result={result}\n            userInfo={userInfo}\n            userName={userName}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\nexport default SearchResults;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Messages.js",["268","269","270","271"],[],"import { useLocation, useNavigate } from \"react-router-dom\";\nimport AppBar from \"../components/AppBar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Popper from \"@mui/material/Popper\";\nimport PopupState, { bindToggle, bindPopper } from \"material-ui-popup-state\";\nimport Fade from \"@mui/material/Fade\";\nimport Paper from \"@mui/material/Paper\";\nimport { TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport ConversationCard from \"../components/ConversationCard\";\n\nfunction Messages() {\n  const { search } = useLocation();\n  const userInfo = new URLSearchParams(search);\n  const user_id = userInfo.get(\"userInfo\");\n  const [newMessageValue, setNewMessageValue] = useState(\"\");\n  const [following, setFollowing] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const navigate = useNavigate();\n\n  const getFollowing = async () => {\n    console.log(userInfo);\n    console.log(user_id);\n    await axios\n      .get(`${backendUrl}api/getFollowing/${user_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        setFollowing(message);\n        console.log(message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  const handleSendMessage = async () => {\n    const currentTimestamp = new Date().toISOString();\n    axios\n      .post(`${backendUrl}api/newMessage`, {\n        sender_id: user_id,\n        receiver_id: selectedUser.user_id,\n        content: newMessageValue,\n        created_at: currentTimestamp,\n      })\n      .then((response) => {\n        const { message } = response.data;\n        console.log(\"Response from server:\", message);\n        setNewMessageValue(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error posting data: \", error);\n      });\n  };\n  const getMessages = async () => {\n    await axios\n      .get(`${backendUrl}api/getMessages/${user_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        setMessages(\n          message.sort((a, b) => {\n            const timeStampA = new Date(a.created_at).getTime();\n            const timeStampB = new Date(b.created_at).getTime();\n            return timeStampB - timeStampA;\n          })\n        );\n\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  const getConversations = async (arr) => {\n    let map = new Map();\n    for (let msg of arr) {\n      if (msg.sender_id != user_id) {\n        if (!map.has(msg.sender_id)) map.set(msg.sender_id, [msg]);\n        else map.get(msg.sender_id).push(msg);\n      } else {\n        if (!map.has(msg.receiver_id)) map.set(msg.receiver_id, [msg]);\n        else map.get(msg.receiver_id).push(msg);\n      }\n    }\n    //console.log(map);\n    console.log(Array.from(map));\n    setConversations(Array.from(map));\n  };\n\n  useEffect(() => {\n    getFollowing();\n    getMessages();\n  }, []);\n  useEffect(() => {\n    getConversations(messages);\n  }, [messages]);\n  return (\n    <>\n      <AppBar />\n      <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\n        {(popupState) => (\n          <div>\n            <Button\n              variant=\"contained\"\n              {...bindToggle(popupState)}\n              style={{ margin: \"15px\" }}\n            >\n              New Message\n            </Button>\n            <Popper {...bindPopper(popupState)} transition>\n              {({ TransitionProps }) => (\n                <Fade {...TransitionProps} timeout={350}>\n                  <Paper\n                    sx={{\n                      width: \"75vw\",\n                      height: \"35vh\",\n                      p: 2,\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      overflow: \"auto\",\n                    }}\n                  >\n                    <Typography style={{ margin: \"10px\", display: \"flex\" }}>\n                      To:\n                      <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\n                        {(popupState) => (\n                          <>\n                            <Button {...bindToggle(popupState)}>\n                              {selectedUser\n                                ? `${selectedUser.first_name} ${selectedUser.last_name}`\n                                : \"Select from following:\"}\n                            </Button>\n                            <Popper {...bindPopper(popupState)} transition>\n                              {({ TransitionProps }) => (\n                                <Fade {...TransitionProps} timeout={350}>\n                                  <Paper>\n                                    {following.map((item, index) => (\n                                      <Typography\n                                        key={index}\n                                        onClick={() => {\n                                          setSelectedUser(item);\n                                          popupState.close();\n                                        }}\n                                        style={{\n                                          width: \"15vw\",\n                                          textAlign: \"center\",\n                                          fontSize: \"110%\",\n                                        }}\n                                      >\n                                        {item.first_name + \" \" + item.last_name}\n                                      </Typography>\n                                    ))}\n                                  </Paper>\n                                </Fade>\n                              )}\n                            </Popper>\n                          </>\n                        )}\n                      </PopupState>\n                    </Typography>\n                    <TextField\n                      id=\"standard-multiline-static\"\n                      label=\"Message\"\n                      multiline\n                      rows={10}\n                      defaultValue=\"\"\n                      variant=\"filled\"\n                      fullWidth\n                      style={{\n                        minHeight: \"35%\",\n                        maxHeight: \"75%\",\n                        overflow: \"auto\",\n                      }}\n                      onChange={(e) => {\n                        setNewMessageValue(e.target.value);\n                      }}\n                    />\n                    <Typography sx={{ p: 2 }}>\n                      <Button variant=\"contained\" onClick={handleSendMessage}>\n                        Send\n                      </Button>\n                      <Button {...bindToggle(popupState)}>Cancel</Button>\n                    </Typography>\n                  </Paper>\n                </Fade>\n              )}\n            </Popper>\n          </div>\n        )}\n      </PopupState>\n      {conversations.length ? (\n        conversations.map((conversation) => (\n          <ConversationCard\n            key={conversation[0]}\n            message={conversation[1][0]}\n            user_id={user_id}\n            conversation_id={conversation[0]}\n          />\n        ))\n      ) : (\n        <Typography>You have no messages to view</Typography>\n      )}\n    </>\n  );\n}\nexport default Messages;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/pages/Homepage.js",["272","273","274","275"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport backendUrl from \"../config\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"@mui/material/Button\";\nimport NewPostForm from \"../components/NewPostForm\";\nimport PostFeed from \"../components/PostFeed\";\nimport AppBar from \"../components/AppBar\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction Homepage() {\n  //State to store user information\n  const [userInfo, setUserInfo] = useState(null);\n  const navigate = useNavigate();\n\n  const fetchUserInfo = async () => {\n    //  console.log(\"got to fetch\");\n    try {\n      //Retrieves token from localstorage, if no token is present the user will be redirected to /login\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        //redirect\n        navigate(\"/\");\n        return null;\n      }\n      //Makes a GET request to fetch user data using token\n      const response = await axios.get(`${backendUrl}api/user`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      // Returns user data if successful\n      return response.data;\n      //console.log(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user information\", error);\n      return null;\n    }\n  };\n  //Function to get user info using fetchUserInfo and updates userInfo state.\n  const getUserInfo = async () => {\n    const info = await fetchUserInfo();\n    if (info) {\n      setUserInfo(info);\n      console.log(\"User info \", info);\n    } else {\n      console.log(\"User not authenticated or an error occured.\");\n    }\n  };\n  //Effect hook to get user info when component mounts\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n  //Handles signing out by removing the session token from localstorage and navigates to index page.\n  const handleSignOut = () => {\n    setUserInfo(null);\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n\n  if (userInfo === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <>\n        <AppBar />\n        <Typography variant=\"h4\" gutterBottom>\n          Welcome, {userInfo.first_name}!\n        </Typography>\n        <PostFeed userInfo={userInfo} />\n      </>\n    );\n  }\n}\nexport default Homepage;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/config.js",[],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/components/AppBar.js",["276","277"],[],"import * as React from \"react\";\nimport { styled, alpha } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport Badge from \"@mui/material/Badge\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport Popper from \"@mui/material/Popper\";\nimport PopupState, { bindToggle, bindPopper } from \"material-ui-popup-state\";\nimport Fade from \"@mui/material/Fade\";\nimport Paper from \"@mui/material/Paper\";\nimport Notifications from \"./Notifications\";\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(3),\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  right: 0,\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(1)})`,\n    paddingRight: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const [searchInput, setSearchInput] = React.useState(\"\");\n  const [newMessages, setNewMessages] = useState(0);\n  const [newNotifications, setNewNotifications] = useState(0);\n  const [notifications, setNotifications] = useState([]);\n  const navigate = useNavigate();\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  const [userInfo, setUserInfo] = useState(null);\n  //const navigate = useNavigate();\n\n  const fetchUserInfo = async () => {\n    //  console.log(\"got to fetch\");\n    try {\n      //Retrieves token from localstorage, if no token is present the user will be redirected to /login\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        //redirect\n        navigate(\"/\");\n        return null;\n      }\n      //Makes a GET request to fetch user data using token\n      const response = await axios.get(`${backendUrl}api/user`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      // Returns user data if successful\n      return response.data;\n      //console.log(response.data);\n    } catch (error) {\n      console.error(\"Error fetching user information\", error);\n      return null;\n    }\n  };\n  //Function to get user info using fetchUserInfo and updates userInfo state.\n  const getUserInfo = async () => {\n    const info = await fetchUserInfo();\n    if (info) {\n      setUserInfo(info);\n      getNewMessages(info);\n      getNotifications(info);\n      return info.first_name;\n      // console.log(\"User info \", info);\n    } else {\n      console.log(\"User not authenticated or an error occured.\");\n    }\n  };\n  //Effect hook to get user info when component mounts\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const handleSearch = () => {\n    navigate(\n      `/searchResults?searchQuery=${searchInput}&userInfo=${userInfo.user_id}`\n    );\n  };\n  const handleEnterKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  const handleMessageClick = () => {\n    navigate(`/messages?userInfo=${userInfo.user_id}`);\n  };\n  const handleNotificationsClick = () => {\n    navigate(`/notifications?userInfo=${userInfo.user_id}`);\n  };\n  const handleLogoClick = () => {\n    navigate(`/home`);\n  };\n  const getNewMessages = async (info) => {\n    await axios\n      .get(`${backendUrl}api/getNewMessages/${info.user_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        setNewMessages(message.length);\n\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  const getNotifications = async (info) => {\n    await axios\n      .get(`${backendUrl}api/getNotifications/${info.user_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        setNotifications(\n          message.sort((a, b) => {\n            const timeStampA = new Date(a.created_at).getTime();\n            const timeStampB = new Date(b.created_at).getTime();\n            return timeStampB - timeStampA;\n          })\n        );\n        console.log(\"Response from server:\", message);\n        let count = 0;\n        for (let notification of message) {\n          if (!notification.is_read) count++;\n        }\n        setNewNotifications(count);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n\n  const handleSignOut = () => {\n    setUserInfo(null);\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile (Future feature)</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account (Future feature)</MenuItem>\n      <MenuItem onClick={handleSignOut}>Sign Out</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem onClick={handleMessageClick}>\n        <IconButton size=\"large\" aria-label=\"show new mails\" color=\"inherit\">\n          <Badge badgeContent={newMessages} color=\"error\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem onClick={handleNotificationsClick}>\n        <IconButton\n          size=\"large\"\n          aria-label=\"show 17 new notifications\"\n          color=\"inherit\"\n        >\n          <Badge badgeContent={newNotifications} color=\"error\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n\n      <MenuItem onClick={handleSignOut}>\n        <IconButton\n          size=\"large\"\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Sign Out</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            sx={{ mr: 2 }}\n          >\n            {/*<MenuIcon />*/}\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ display: { xs: \"none\", sm: \"block\" }, cursor: \"pointer\" }}\n            onClick={handleLogoClick}\n          >\n            The Box\n          </Typography>\n          <Search>\n            <SearchIconWrapper onClick={handleSearch}>\n              <SearchIcon onClick={handleSearch} />\n            </SearchIconWrapper>\n            <StyledInputBase\n              placeholder=\"Search…\"\n              inputProps={{ \"aria-label\": \"search\" }}\n              onChange={(e) => setSearchInput(e.target.value)}\n              onKeyDown={handleEnterKeyPress}\n            />\n          </Search>\n          <Box sx={{ flexGrow: 1 }} />\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"show 4 new mails\"\n              color=\"inherit\"\n              onClick={handleMessageClick}\n            >\n              <Badge badgeContent={newMessages} color=\"error\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n\n            <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\n              {(popupState) => (\n                <div>\n                  <IconButton\n                    size=\"large\"\n                    aria-label=\"show 17 new notifications\"\n                    color=\"inherit\"\n                    {...bindToggle(popupState)}\n                  >\n                    <Badge badgeContent={newNotifications} color=\"error\">\n                      <NotificationsIcon />\n                    </Badge>\n                  </IconButton>\n                  <Popper {...bindPopper(popupState)} transition>\n                    {({ TransitionProps }) => (\n                      <Fade {...TransitionProps} timeout={350}>\n                        <Box>\n                          <Paper\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              width: \"30vw\",\n                              height: \"50vh\",\n                              maxHeight: \"80vh\",\n                              overflow: \"auto\",\n                              spacing: \"2vh\",\n                              backgroundColor: \"rgb(24,118,210,.9)\",\n                            }}\n                          >\n                            <Notifications content={notifications} />\n                          </Paper>\n                        </Box>\n                      </Fade>\n                    )}\n                  </Popper>\n                </div>\n              )}\n            </PopupState>\n            <IconButton\n              size=\"large\"\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </Box>\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </Box>\n  );\n}\n","/Users/bryansanchezandrade/Documents/theBox/client/src/components/Notifications.js",["278","279","280"],[],"import {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\n\nfunction Notifications(props) {\n  const setNotificationsAsRead = async () => {\n    const anyUnread = await checkIfUnread(props.content);\n    console.log(anyUnread);\n    if (anyUnread) {\n      await axios\n        .put(`${backendUrl}api/setNotificationsAsRead`, {\n          user_id: props.content[0].user_id,\n        })\n        .then((response) => {\n          const { message } = response.data;\n          console.log(\"Response from server:\", message);\n        })\n        .catch((error) => {\n          console.error(\"Error posting data: \", error);\n        });\n    }\n  };\n  const checkIfUnread = (arr) => {\n    let result = false;\n    for (let i of arr) {\n      if (!i.is_read) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  };\n  useEffect(() => {\n    setNotificationsAsRead();\n  }, []);\n  return (\n    <>\n      {props.content.map((notification, index) => (\n        <Card\n          key={index}\n          sx={{\n            margin: \"1vh\",\n            backgroundColor: notification.is_read\n              ? \"white\"\n              : \"rgb(24,118,210,0.25)\",\n            width: \"95%\",\n          }}\n        >\n          <CardContent>\n            <Typography variant=\"body2\">{notification.content}</Typography>\n          </CardContent>\n        </Card>\n      ))}\n    </>\n  );\n}\nexport default Notifications;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/components/LoginForm.js",[],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/components/NewPostForm.js",[],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/components/ConversationCard.js",["281","282","283"],[],"import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ConversationCard(props) {\n  const [name, setName] = useState(\"\");\n  const navigate = useNavigate();\n\n  const findByUserID = async () => {\n    axios\n      .get(`${backendUrl}api/findByUserID/${props.conversation_id}`)\n      .then((response) => {\n        const message = response.data;\n        //console.log(message);\n        setName(message.first_name + \" \" + message.last_name);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  const goToConversation = (var1, var2) => {\n    navigate(`/conversation?user_id=${var1}&conversation_id=${var2}`);\n  };\n  useEffect(() => {\n    findByUserID();\n  }, []);\n\n  return (\n    <Card\n      sx={{\n        width: \"99vw\",\n        backgroundColor:\n          props.message.is_read || props.message.sender_id == props.user_id\n            ? \"white\"\n            : \"rgb(24,118,210,0.25)\",\n      }}\n    >\n      <CardActionArea\n        onClick={() => goToConversation(props.user_id, props.conversation_id)}\n      >\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {props.message.content}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\nexport default ConversationCard;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/components/PostFeed.js",["284","285"],[],"import { useState } from \"react\";\nimport backendUrl from \"../config\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport Post from \"./Post\";\nimport { CardContent } from \"@mui/material\";\nimport NewPostForm from \"./NewPostForm\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction PostFeed(props) {\n  const [posts, getPosts] = useState([]);\n  let allPosts = [];\n  const getUserPosts = async () => {\n    axios\n      .get(`${backendUrl}api/getUserPosts/${props.userInfo.user_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        allPosts = [...message];\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  const getFollowingPosts = async () => {\n    axios\n      .get(`${backendUrl}api/getFollowingPosts/${props.userInfo.user_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        allPosts = [...allPosts, ...message];\n        console.log(\"Response from server:\", message);\n        getPosts(\n          allPosts.sort((a, b) => {\n            const timeStampA = new Date(a.created_at).getTime();\n            const timeStampB = new Date(b.created_at).getTime();\n            return timeStampB - timeStampA;\n          })\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n\n  useEffect(() => {\n    getUserPosts().then(() => {\n      getFollowingPosts();\n    });\n  }, []);\n\n  return (\n    <>\n      <NewPostForm userInfo={props.userInfo} getUserPosts={getUserPosts} />\n      <Typography variant=\"h5\" gutterBottom>\n        Feed:\n      </Typography>\n      <div>\n        {posts.map((content, index) => (\n          <Post key={index} content={content} userInfo={props.userInfo} />\n        ))}\n      </div>\n    </>\n  );\n}\nexport default PostFeed;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/components/NewAccountForm.js",[],[],"/Users/bryansanchezandrade/Documents/theBox/client/src/components/UserCard.js",["286"],[],"import {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport backendUrl from \"../config\";\nimport { useEffect } from \"react\";\n\nfunction UserCard(props) {\n  const [following, setFollowing] = useState(false);\n  const followUser = async () => {\n    const currentTimestamp = new Date().toISOString();\n    axios\n      .post(`${backendUrl}api/newFollow`, {\n        user_id: props.result.user_id,\n        follower_id: props.userInfo,\n        created_at: currentTimestamp,\n      })\n      .then((response) => {\n        const { message } = response.data;\n        setFollowing(true);\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error posting data: \", error);\n      });\n    axios\n      .post(`${backendUrl}api/newNotification`, {\n        user_id: props.result.user_id,\n        content: `${props.userName} is now following you!`,\n        created_at: currentTimestamp,\n        is_read: false,\n      })\n      .then((response) => {\n        const { message } = response.data;\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error posting data: \", error);\n      });\n  };\n  const unfollowUser = async () => {\n    //   const currentTimestamp = new Date().toISOString();\n    axios\n      .delete(`${backendUrl}api/unfollow`, {\n        data: {\n          user_id: props.result.user_id,\n          follower_id: props.userInfo,\n        },\n      })\n      .then((response) => {\n        const { message } = response.data;\n        setFollowing(false);\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting data: \", error);\n      });\n  };\n\n  const isFollowing = async () => {\n    axios\n      .get(\n        `${backendUrl}api/following/${props.result.user_id}/${props.userInfo}`\n      )\n      .then((response) => {\n        const message = response.data.rows;\n        console.log(\"Response from server:\", message);\n        if (message.length > 0) setFollowing(true);\n        else setFollowing(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  useEffect(() => {\n    isFollowing();\n  }, []);\n\n  if (!following)\n    return (\n      <Card style={{ maxWidth: \"100%\" }}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"div\">\n            {props.result.first_name + \" \" + props.result.last_name}\n          </Typography>\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            {props.result.username}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={followUser}>\n            Follow\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  else\n    return (\n      <Card style={{ maxWidth: \"100%\" }}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"div\">\n            {props.result.first_name + \" \" + props.result.last_name}\n          </Typography>\n          <Typography variant=\"h5\" color=\"text.secondary\">\n            {props.result.username}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" onClick={unfollowUser}>\n            Unfollow\n          </Button>\n        </CardActions>\n      </Card>\n    );\n}\nexport default UserCard;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/components/Post.js",["287","288"],[],"import {\n  Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport backendUrl from \"../config\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Popper from \"@mui/material/Popper\";\nimport PopupState, { bindToggle, bindPopper } from \"material-ui-popup-state\";\nimport Fade from \"@mui/material/Fade\";\nimport Paper from \"@mui/material/Paper\";\nimport Comment from \"./Comment\";\nimport Box from \"@mui/material/Box\";\n\nfunction Post(props) {\n  const [userInfo, setUserInfo] = useState([]);\n  const [commentText, setCommentText] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [liked, isLiked] = useState(false);\n\n  const handleCommentText = (event) => {\n    const inputValue = event.target.value;\n    setCommentText(inputValue);\n  };\n  const handleNewComment = async () => {\n    const currentTimestamp = new Date().toISOString();\n    axios\n      .post(`${backendUrl}api/newComment`, {\n        post_id: props.content.post_id,\n        user_id: props.userInfo.user_id,\n        content: commentText,\n        created_at: currentTimestamp,\n      })\n      .then((response) => {\n        const { message } = response.data;\n        console.log(\"Response from server:\", message);\n        setCommentText(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error posting data: \", error);\n      });\n\n    axios\n      .post(`${backendUrl}api/newNotification`, {\n        user_id: props.content.user_id,\n        content: `${props.userInfo.first_name} commented on your post!`,\n        created_at: currentTimestamp,\n        is_read: false,\n      })\n      .then((response) => {\n        const { message } = response.data;\n        console.log(\"Response from server:\", message);\n      })\n      .catch((error) => {\n        console.error(\"Error posting data: \", error);\n      });\n  };\n  const handleLike = async () => {\n    if (!liked) {\n      const currentTimestamp = new Date().toISOString();\n      axios\n        .post(`${backendUrl}api/likePost`, {\n          post_id: props.content.post_id,\n          user_id: props.userInfo.user_id,\n          created_at: currentTimestamp,\n        })\n        .then((response) => {\n          const { message } = response.data;\n          isLiked(true);\n          console.log(\"Response from server:\", message);\n          getLikes();\n          axios\n            .post(`${backendUrl}api/newNotification`, {\n              user_id: props.content.user_id,\n              content: `${props.userInfo.first_name} liked your post!`,\n              created_at: currentTimestamp,\n              is_read: false,\n            })\n            .then((response) => {\n              const { message } = response.data;\n              console.log(\"Response from server:\", message);\n            })\n            .catch((error) => {\n              console.error(\"Error posting data: \", error);\n            });\n        })\n        .catch((error) => {\n          console.error(\"Error posting data: \", error);\n        });\n    } else {\n      axios\n        .delete(`${backendUrl}api/dislikePost`, {\n          data: {\n            user_id: props.userInfo.user_id,\n            post_id: props.content.post_id,\n          },\n        })\n        .then((response) => {\n          const { message } = response.data;\n          isLiked(false);\n          console.log(\"Response from server:\", message);\n          getLikes();\n        })\n        .catch((error) => {\n          console.error(\"Error deleting data: \", error);\n        });\n    }\n  };\n\n  const getComments = async () => {\n    axios\n      .get(`${backendUrl}api/getComments/${props.content.post_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        setComments(message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  const getLikes = async () => {\n    return axios\n      .get(`${backendUrl}api/getLikes/${props.content.post_id}`)\n      .then((response) => {\n        const message = response.data.rows;\n        //  console.log(message);\n        setLikes(message);\n        return message;\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n        return [];\n      });\n  };\n  const isLikedByUser = async (arr) => {\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].user_id == props.userInfo.user_id) return true;\n    }\n    return false;\n  };\n\n  const findByUserID = async () => {\n    axios\n      .get(`${backendUrl}api/findByUserID/${props.content.user_id}`)\n      .then((response) => {\n        const message = response.data;\n        setUserInfo(message);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data: \", error);\n      });\n  };\n  const fetchData = async () => {\n    await findByUserID();\n    await getComments();\n    let data = await getLikes();\n    const likedByUser = await isLikedByUser(data);\n    isLiked(likedByUser);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return (\n    <Box m={2}>\n      <Paper elevation={4}>\n        <Card style={{ maxWidth: \"100%\" }}>\n          <CardContent>\n            {\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {userInfo.first_name} {userInfo.last_name}\n              </Typography>\n            }\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              {props.content.content}\n            </Typography>\n            <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\n              {(popupState) => (\n                <div>\n                  <Button size=\"small\" {...bindToggle(popupState)}>\n                    View comments ({comments.length})\n                  </Button>\n                  <Popper {...bindPopper(popupState)} transition>\n                    {({ TransitionProps }) => (\n                      <Fade {...TransitionProps} timeout={350}>\n                        <Box>\n                          <Paper\n                            sx={{\n                              width: \"80vw\",\n                              height: \"25vh\",\n                              maxHeight: \"25vh\",\n                              overflow: \"auto\",\n                            }}\n                          >\n                            {comments.map((content, index) => (\n                              <Comment key={index} content={content} />\n                            ))}\n                          </Paper>\n                        </Box>\n                      </Fade>\n                    )}\n                  </Popper>\n                </div>\n              )}\n            </PopupState>\n          </CardContent>\n          <CardActions>\n            <TextField\n              variant=\"filled\"\n              fullWidth\n              onChange={handleCommentText}\n            />\n            <Button size=\"small\" onClick={handleNewComment}>\n              Comment\n            </Button>\n            {liked ? (\n              <Button size=\"small\" variant=\"contained\" onClick={handleLike}>\n                Like ({likes.length})\n              </Button>\n            ) : (\n              <Button size=\"small\" onClick={handleLike}>\n                Like ({likes.length})\n              </Button>\n            )}\n          </CardActions>\n        </Card>\n      </Paper>\n    </Box>\n  );\n}\nexport default Post;\n","/Users/bryansanchezandrade/Documents/theBox/client/src/components/Comment.js",["289"],[],{"ruleId":"290","severity":1,"message":"291","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":14},{"ruleId":"290","severity":1,"message":"294","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":19},{"ruleId":"295","severity":1,"message":"296","line":53,"column":6,"nodeType":"297","endLine":53,"endColumn":8,"suggestions":"298"},{"ruleId":"290","severity":1,"message":"299","line":55,"column":9,"nodeType":"292","messageId":"293","endLine":55,"endColumn":22},{"ruleId":"290","severity":1,"message":"291","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":14},{"ruleId":"290","severity":1,"message":"300","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":16},{"ruleId":"290","severity":1,"message":"301","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":22},{"ruleId":"290","severity":1,"message":"302","line":10,"column":10,"nodeType":"292","messageId":"293","endLine":10,"endColumn":14},{"ruleId":"290","severity":1,"message":"303","line":11,"column":9,"nodeType":"292","messageId":"293","endLine":11,"endColumn":20},{"ruleId":"290","severity":1,"message":"304","line":14,"column":9,"nodeType":"292","messageId":"293","endLine":14,"endColumn":19},{"ruleId":"290","severity":1,"message":"305","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":21},{"ruleId":"295","severity":1,"message":"306","line":48,"column":6,"nodeType":"297","endLine":48,"endColumn":8,"suggestions":"307"},{"ruleId":"308","severity":1,"message":"309","line":143,"column":26,"nodeType":"310","messageId":"311","endLine":143,"endColumn":28},{"ruleId":"295","severity":1,"message":"312","line":168,"column":6,"nodeType":"297","endLine":168,"endColumn":8,"suggestions":"313"},{"ruleId":"295","severity":1,"message":"314","line":69,"column":6,"nodeType":"297","endLine":69,"endColumn":8,"suggestions":"315"},{"ruleId":"295","severity":1,"message":"316","line":82,"column":6,"nodeType":"297","endLine":82,"endColumn":8,"suggestions":"317"},{"ruleId":"290","severity":1,"message":"318","line":12,"column":8,"nodeType":"292","messageId":"293","endLine":12,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":125,"column":6,"nodeType":"297","endLine":125,"endColumn":8,"suggestions":"319"},{"ruleId":"295","severity":1,"message":"320","line":23,"column":6,"nodeType":"297","endLine":23,"endColumn":8,"suggestions":"321"},{"ruleId":"290","severity":1,"message":"322","line":25,"column":9,"nodeType":"292","messageId":"293","endLine":25,"endColumn":17},{"ruleId":"308","severity":1,"message":"323","line":81,"column":25,"nodeType":"310","messageId":"311","endLine":81,"endColumn":27},{"ruleId":"295","severity":1,"message":"324","line":97,"column":6,"nodeType":"297","endLine":97,"endColumn":8,"suggestions":"325"},{"ruleId":"295","severity":1,"message":"326","line":100,"column":6,"nodeType":"297","endLine":100,"endColumn":16,"suggestions":"327"},{"ruleId":"290","severity":1,"message":"328","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":17},{"ruleId":"295","severity":1,"message":"320","line":34,"column":6,"nodeType":"297","endLine":34,"endColumn":8,"suggestions":"329"},{"ruleId":"308","severity":1,"message":"309","line":41,"column":60,"nodeType":"310","messageId":"311","endLine":41,"endColumn":62},{"ruleId":"290","severity":1,"message":"330","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":11},{"ruleId":"295","severity":1,"message":"331","line":85,"column":6,"nodeType":"297","endLine":85,"endColumn":8,"suggestions":"332"},{"ruleId":"308","severity":1,"message":"309","line":120,"column":39,"nodeType":"310","messageId":"311","endLine":120,"endColumn":41},{"ruleId":"308","severity":1,"message":"309","line":129,"column":41,"nodeType":"310","messageId":"311","endLine":129,"endColumn":43},{"ruleId":"308","severity":1,"message":"323","line":138,"column":42,"nodeType":"310","messageId":"311","endLine":138,"endColumn":44},{"ruleId":"290","severity":1,"message":"333","line":5,"column":3,"nodeType":"292","messageId":"293","endLine":5,"endColumn":14},{"ruleId":"290","severity":1,"message":"291","line":6,"column":3,"nodeType":"292","messageId":"293","endLine":6,"endColumn":9},{"ruleId":"295","severity":1,"message":"334","line":42,"column":6,"nodeType":"297","endLine":42,"endColumn":8,"suggestions":"335"},{"ruleId":"290","severity":1,"message":"336","line":13,"column":9,"nodeType":"292","messageId":"293","endLine":13,"endColumn":20},{"ruleId":"295","severity":1,"message":"337","line":37,"column":6,"nodeType":"297","endLine":37,"endColumn":8,"suggestions":"338"},{"ruleId":"290","severity":1,"message":"336","line":13,"column":9,"nodeType":"292","messageId":"293","endLine":13,"endColumn":20},{"ruleId":"295","severity":1,"message":"337","line":37,"column":6,"nodeType":"297","endLine":37,"endColumn":8,"suggestions":"339"},{"ruleId":"290","severity":1,"message":"291","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":14},{"ruleId":"290","severity":1,"message":"300","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":16},{"ruleId":"290","severity":1,"message":"301","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":22},{"ruleId":"290","severity":1,"message":"302","line":10,"column":10,"nodeType":"292","messageId":"293","endLine":10,"endColumn":14},{"ruleId":"290","severity":1,"message":"303","line":11,"column":9,"nodeType":"292","messageId":"293","endLine":11,"endColumn":20},{"ruleId":"290","severity":1,"message":"304","line":14,"column":9,"nodeType":"292","messageId":"293","endLine":14,"endColumn":19},{"ruleId":"290","severity":1,"message":"330","line":3,"column":8,"nodeType":"292","messageId":"293","endLine":3,"endColumn":11},{"ruleId":"295","severity":1,"message":"331","line":85,"column":6,"nodeType":"297","endLine":85,"endColumn":8,"suggestions":"340"},{"ruleId":"308","severity":1,"message":"309","line":120,"column":39,"nodeType":"310","messageId":"311","endLine":120,"endColumn":41},{"ruleId":"308","severity":1,"message":"309","line":129,"column":41,"nodeType":"310","messageId":"311","endLine":129,"endColumn":43},{"ruleId":"308","severity":1,"message":"323","line":138,"column":42,"nodeType":"310","messageId":"311","endLine":138,"endColumn":44},{"ruleId":"295","severity":1,"message":"314","line":69,"column":6,"nodeType":"297","endLine":69,"endColumn":8,"suggestions":"341"},{"ruleId":"290","severity":1,"message":"322","line":25,"column":9,"nodeType":"292","messageId":"293","endLine":25,"endColumn":17},{"ruleId":"308","severity":1,"message":"323","line":81,"column":25,"nodeType":"310","messageId":"311","endLine":81,"endColumn":27},{"ruleId":"295","severity":1,"message":"324","line":97,"column":6,"nodeType":"297","endLine":97,"endColumn":8,"suggestions":"342"},{"ruleId":"295","severity":1,"message":"326","line":100,"column":6,"nodeType":"297","endLine":100,"endColumn":16,"suggestions":"343"},{"ruleId":"290","severity":1,"message":"291","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":14},{"ruleId":"290","severity":1,"message":"294","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":19},{"ruleId":"295","severity":1,"message":"296","line":53,"column":6,"nodeType":"297","endLine":53,"endColumn":8,"suggestions":"344"},{"ruleId":"290","severity":1,"message":"299","line":55,"column":9,"nodeType":"292","messageId":"293","endLine":55,"endColumn":22},{"ruleId":"290","severity":1,"message":"318","line":12,"column":8,"nodeType":"292","messageId":"293","endLine":12,"endColumn":16},{"ruleId":"295","severity":1,"message":"296","line":125,"column":6,"nodeType":"297","endLine":125,"endColumn":8,"suggestions":"345"},{"ruleId":"290","severity":1,"message":"333","line":5,"column":3,"nodeType":"292","messageId":"293","endLine":5,"endColumn":14},{"ruleId":"290","severity":1,"message":"291","line":6,"column":3,"nodeType":"292","messageId":"293","endLine":6,"endColumn":9},{"ruleId":"295","severity":1,"message":"334","line":42,"column":6,"nodeType":"297","endLine":42,"endColumn":8,"suggestions":"346"},{"ruleId":"290","severity":1,"message":"328","line":4,"column":8,"nodeType":"292","messageId":"293","endLine":4,"endColumn":17},{"ruleId":"295","severity":1,"message":"320","line":34,"column":6,"nodeType":"297","endLine":34,"endColumn":8,"suggestions":"347"},{"ruleId":"308","severity":1,"message":"309","line":41,"column":60,"nodeType":"310","messageId":"311","endLine":41,"endColumn":62},{"ruleId":"290","severity":1,"message":"305","line":6,"column":10,"nodeType":"292","messageId":"293","endLine":6,"endColumn":21},{"ruleId":"295","severity":1,"message":"306","line":48,"column":6,"nodeType":"297","endLine":48,"endColumn":8,"suggestions":"348"},{"ruleId":"295","severity":1,"message":"316","line":82,"column":6,"nodeType":"297","endLine":82,"endColumn":8,"suggestions":"349"},{"ruleId":"308","severity":1,"message":"309","line":143,"column":26,"nodeType":"310","messageId":"311","endLine":143,"endColumn":28},{"ruleId":"295","severity":1,"message":"312","line":168,"column":6,"nodeType":"297","endLine":168,"endColumn":8,"suggestions":"350"},{"ruleId":"295","severity":1,"message":"320","line":23,"column":6,"nodeType":"297","endLine":23,"endColumn":8,"suggestions":"351"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'NewPostForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["352"],"'handleSignOut' is assigned a value but never used.","'Backdrop' is defined but never used.","'NewAccountForm' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'CardContent' is defined but never used.","React Hook useEffect has missing dependencies: 'getFollowingPosts' and 'getUserPosts'. Either include them or remove the dependency array.",["353"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["354"],"React Hook useEffect has missing dependencies: 'getUserInfo' and 'searchForUser'. Either include them or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'isFollowing'. Either include it or remove the dependency array.",["356"],"'MenuIcon' is defined but never used.",["357"],"React Hook useEffect has a missing dependency: 'findByUserID'. Either include it or remove the dependency array.",["358"],"'navigate' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'getFollowing' and 'getMessages'. Either include them or remove the dependency array.",["359"],"React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array.",["360"],"'CardMedia' is defined but never used.",["361"],"'App' is defined but never used.","React Hook useEffect has missing dependencies: 'getConversation' and 'setMessagesAsRead'. Either include them or remove the dependency array.",["362"],"'CardActions' is defined but never used.","React Hook useEffect has a missing dependency: 'setNotificationsAsRead'. Either include it or remove the dependency array.",["363"],"'searchQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNotifications'. Either include it or remove the dependency array.",["364"],["365"],["366"],["367"],["368"],["369"],["370"],["371"],["372"],["373"],["374"],["375"],["376"],["377"],{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"378","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"389","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"400","fix":"402"},{"desc":"396","fix":"403"},{"desc":"384","fix":"404"},{"desc":"391","fix":"405"},{"desc":"393","fix":"406"},{"desc":"378","fix":"407"},{"desc":"378","fix":"408"},{"desc":"398","fix":"409"},{"desc":"389","fix":"410"},{"desc":"380","fix":"411"},{"desc":"386","fix":"412"},{"desc":"382","fix":"413"},{"desc":"389","fix":"414"},"Update the dependencies array to be: [getUserInfo]",{"range":"415","text":"416"},"Update the dependencies array to be: [getFollowingPosts, getUserPosts]",{"range":"417","text":"418"},"Update the dependencies array to be: [fetchData]",{"range":"419","text":"420"},"Update the dependencies array to be: [getUserInfo, searchForUser]",{"range":"421","text":"422"},"Update the dependencies array to be: [isFollowing]",{"range":"423","text":"424"},{"range":"425","text":"416"},"Update the dependencies array to be: [findByUserID]",{"range":"426","text":"427"},"Update the dependencies array to be: [getFollowing, getMessages]",{"range":"428","text":"429"},"Update the dependencies array to be: [getConversations, messages]",{"range":"430","text":"431"},{"range":"432","text":"427"},"Update the dependencies array to be: [getConversation, setMessagesAsRead]",{"range":"433","text":"434"},"Update the dependencies array to be: [setNotificationsAsRead]",{"range":"435","text":"436"},"Update the dependencies array to be: [getNotifications]",{"range":"437","text":"438"},{"range":"439","text":"438"},{"range":"440","text":"434"},{"range":"441","text":"422"},{"range":"442","text":"429"},{"range":"443","text":"431"},{"range":"444","text":"416"},{"range":"445","text":"416"},{"range":"446","text":"436"},{"range":"447","text":"427"},{"range":"448","text":"418"},{"range":"449","text":"424"},{"range":"450","text":"420"},{"range":"451","text":"427"},[1720,1722],"[getUserInfo]",[1464,1466],"[getFollowingPosts, getUserPosts]",[5063,5065],"[fetchData]",[2239,2241],"[getUserInfo, searchForUser]",[2324,2326],"[isFollowing]",[4278,4280],[634,636],"[findByUserID]",[3223,3225],"[getFollowing, getMessages]",[3285,3295],"[getConversations, messages]",[1112,1114],[2742,2744],"[getConversation, setMessagesAsRead]",[1001,1003],"[setNotificationsAsRead]",[1296,1298],"[getNotifications]",[1296,1298],[2742,2744],[2239,2241],[3223,3225],[3285,3295],[1720,1722],[4278,4280],[1001,1003],[1112,1114],[1464,1466],[2324,2326],[5063,5065],[634,636]]